{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todoform","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","TodoForm","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA6DeA,MA3Df,SAAmBC,GACnB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAO,IAAlE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGjB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QActB,OACI,sBAAMW,UAAU,YAAYC,SAZX,SAAAH,GACjBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBC,KAAMjB,IAGVC,EAAS,KAIT,SACKL,EAAME,KACH,qCACA,uBACIoB,KAAK,OACLC,YAAY,mBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAET,wBAAQQ,UAAU,mBAAlB,uBAGJ,qCACI,uBACAQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAET,wBAAQQ,UAAU,cAAlB,4B,sBCRGa,MAvCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC7C,EAAwB9B,mBAAS,CAC7BgB,GAAG,KACHd,MAAM,KAFV,mBAAOD,EAAP,KAAa8B,EAAb,KAaA,OAAG9B,EAAKe,GACG,cAACgB,EAAD,CAAU/B,KAAMA,EAAMa,SAThB,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAG,KACHd,MAAM,QAQHyB,EAAMM,KAAI,SAACC,EAAKC,GAAN,OACb,sBACAtB,UAAWqB,EAAKE,WAAa,oBAAsB,WADnD,UAGI,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKlB,KAApD,SACKkB,EAAKd,MADAc,EAAKlB,IAGf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACAwB,QAAS,kBAAIR,EAAWK,EAAKlB,KAC7BH,UAAU,gBAEV,cAAC,IAAD,CACAwB,QAAS,kBAAIN,EAAQ,CAACf,GAAGkB,EAAKlB,GAAId,MAAMgC,EAAKd,QAC7CP,UAAU,mBAXbsB,OCkCEG,MAxDf,WACI,MAA0BtC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcY,EAAd,KAyCA,OACI,gCACI,4DACA,cAACP,EAAD,CAAUlB,SA1CF,SAAAoB,GACZ,GAAIA,EAAKd,OAAQ,QAAQoB,KAAKN,EAAKd,MAAnC,CAIA,IAAMqB,EAAQ,CAAIP,GAAJ,mBAAaP,IAE3BY,EAASE,OAoCL,cAAC,EAAD,CACAd,MAAOA,EACPC,aAhBa,SAAAZ,GACjB,IAAI0B,EAAef,EAAMM,KAAI,SAAAC,GAIzB,OAHGA,EAAKlB,KAAOA,IACXkB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAULb,WAzBW,SAAAb,GACf,IAAM2B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKlB,KAAOA,KAExDuB,EAASI,IAuBLb,WApCW,SAACe,EAAQC,GACpBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAI3CmB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAC1BA,EAAKhC,KAAO6B,EAASC,EAAWE,eCV7BC,MARf,WACE,OACE,qBAAKpC,UAAU,WAAf,SACE,cAAC,EAAD,OCLNqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.305f13f1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n \r\nfunction Todoform( props ) {\r\nconst [input, setInput] = useState(props.edit ? props.edit.value: \"\");\r\n\r\nconst inputRef = useRef(null);\r\n\r\nuseEffect(()=>{\r\n    inputRef.current.focus()\r\n})\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        })\r\n\r\n        setInput(\"\")\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n                <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Update your item\" \r\n                    value={input} \r\n                    name=\"text\" \r\n                    className=\"todo-input edit\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button edit\">Update</button>\r\n                </>\r\n            ):(\r\n            <>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Add a todo\" \r\n                value={input} \r\n                name=\"text\" \r\n                className=\"todo-input\"\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n                />\r\n            <button className=\"todo-button\">Add todo</button>\r\n            </>\r\n        )}\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Todoform\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id:null,\r\n        value:\"\"\r\n    })\r\n\r\nconst submitUpdate = value => {\r\n    updateTodo(edit.id, value)\r\n    setEdit({ \r\n        id:null, \r\n        value:\"\"\r\n    })\r\n}\r\n\r\n    if(edit.id){\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo,index)=>(\r\n        <div \r\n        className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} \r\n        key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                onClick={()=>removeTodo(todo.id)}\r\n                className=\"delete-icon\"\r\n                />\r\n                <TiEdit\r\n                onClick={()=>setEdit({id:todo.id, value:todo.text})}\r\n                className=\"edit-icon\"\r\n                />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, {useState} from 'react'\r\nimport Todo from './Todo'\r\nimport TodoForm from \"./TodoForm\"\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos)\r\n\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) =>{\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (\r\n            item.id === todoId ? newValue : item\r\n        )))\r\n    }\r\n\r\n    const removeTodo = id =>{\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n    \r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>What's the plan for today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo \r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo = {updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","\nimport './App.css';\nimport Todoform from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}